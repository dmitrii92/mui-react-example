{"version":3,"sources":["common/components/Button.tsx","features/project/components/ViewProject.tsx","features/project/components/AddProjectModal.tsx","common/createEvent.ts","features/project/state/projectSlice.ts","features/project/components/ProjectList.tsx","common/routes.ts","features/project/pages/ProjectPage.tsx","common/components/SideMenu.tsx","features/auth/state/authSlice.ts","app/store.ts","common/components/TopMenu.tsx","App.tsx","reportWebVitals.ts","features/auth/pages/SignInPage.tsx","features/auth/AuthContextProvider.tsx","index.tsx"],"names":["Button","styled","MuiButton","useStyles","makeStyles","theme","createStyles","card","maxWidth","minWidth","margin","maxHeight","media","height","paddingTop","ViewProject","props","classes","Card","className","CardMedia","image","title","CardContent","Typography","variant","component","name","startDate","endDate","manager","administrator","CardActions","root","padding","spacing","closeButton","position","right","top","color","palette","grey","addButton","DialogTitle","children","onClose","other","styles","disableTypography","IconButton","aria-label","onClick","DialogContent","withStyles","MuiDialogContent","DialogActions","justifyContent","MuiDialogActions","AddProjectModal","useForm","mode","defaultValues","register","handleSubmit","handleClose","formRef","React","useRef","Dialog","aria-labelledby","open","isOpen","id","Divider","ref","onSubmit","values","TextField","fullWidth","label","autoComplete","autoFocus","defaultValue","inputRef","type","InputLabelProps","shrink","current","dispatchEvent","eventName","event","Event","cancelable","bubbles","document","createEvent","initEvent","projectSlice","createSlice","initialState","projects","isLoading","error","reducers","setAddProject","state","setSuccessAddProject","action","newProjects","slice","payload","actions","selectProjects","project","toolbar","display","marginBottom","flexWrap","overflow","ProjectList","dispatch","useDispatch","useSelector","useState","showModal","setShowModal","map","a","addProject","routes","roadmaps","header","paddingBottom","ProjectsPage","value","setValue","history","useHistory","Tabs","indicatorColor","textColor","onChange","newValue","Tab","push","exact","path","paddingLeft","backgroundColor","primary","main","width","content","minHeight","marginLeft","listItem","SideMenu","List","ListItem","button","ListItemIcon","ListItemText","authSlice","isLogin","loading","setLoginState","loginSuccess","loginFailure","logout","setLoading","selectLogin","auth","selectLoading","store","configureStore","reducer","authReducer","projectReducer","useAppDispatch","paddingRight","TopMenu","AppBar","Toolbar","App","Grid","container","direction","style","item","xs","xl","lg","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","paper","marginTop","flexDirection","alignItems","avatar","secondary","form","submit","SignIn","errors","setError","Container","CssBaseline","Avatar","data","username","password","login","Promise","resolve","reject","catch","required","passwordCheck","message","FormControlLabel","control","Checkbox","Link","href","AuthContextProvider","useEffect","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.973a10c4.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport MuiButton from \"@material-ui/core/Button\";\r\n\r\nconst Button = styled(MuiButton)`\r\n  text-transform: none;\r\n`;\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Project } from \"../api/types\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    card: {\r\n      maxWidth: \"345px\",\r\n      minWidth: \"235px\",\r\n      margin: \"15px\",\r\n      maxHeight: \"300px\"\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: \"50.58%\", // 16:9\r\n    },\r\n  })\r\n);\r\n\r\nconst ViewProject = (props: Project) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardMedia image=\"/static/images/cat.jpg\" title=\"project_card\" className={classes.media} />\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h5\">\r\n          {props.name}\r\n        </Typography>\r\n        {/**TODO: как отображать когда только одна из дат?*/}\r\n        {props.startDate && props.endDate ? (\r\n          <Typography>\r\n            {props.startDate} - {props.endDate} гг.\r\n          </Typography>\r\n        ) : null}\r\n        <Typography>{props.manager}</Typography>\r\n        <Typography>{props.administrator}</Typography>\r\n      </CardContent>\r\n      <CardActions>{/*TODO */}</CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ViewProject;\r\n","import React from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Button from \"../../../common/components/Button\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Project } from \"../api/types\";\r\nimport { createEvent } from \"../../../common/createEvent\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  addButton: {\r\n    margin: \"10px 35px 10px 35px\",\r\n  },\r\n}));\r\n\r\nconst DialogTitle = (props: any) => {\r\n  const { children, onClose, ...other } = props;\r\n  const styles = useStyles();\r\n  return (\r\n    <MuiDialogTitle disableTypography className={styles.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={styles.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n};\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    justifyContent: \"center\",\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\ninterface AddProjectModalI {\r\n  onClose: () => void;\r\n  onSubmit: (project: Project) => void;\r\n  isOpen: boolean;\r\n}\r\n\r\nconst AddProjectModal: React.FC<AddProjectModalI> = (props) => {\r\n  const classes = useStyles();\r\n  const { register, handleSubmit } = useForm({\r\n    mode: \"onBlur\",\r\n    defaultValues: {},\r\n  });\r\n  const handleClose = () => {\r\n    props.onClose();\r\n  };\r\n  const formRef = React.useRef<HTMLFormElement>(null);\r\n\r\n  return (\r\n    <>\r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={props.isOpen}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          Новый проект\r\n        </DialogTitle>\r\n        <Divider />\r\n        <DialogContent>\r\n          <form\r\n            ref={formRef}\r\n            onSubmit={handleSubmit((values) => {\r\n              props.onSubmit(values);\r\n            })}\r\n          >\r\n            <TextField\r\n              margin=\"normal\"\r\n              fullWidth\r\n              id=\"name\"\r\n              label=\"Название\"\r\n              name=\"name\"\r\n              autoComplete=\"name\"\r\n              autoFocus\r\n              defaultValue=\"Технопарк\"\r\n              inputRef={register}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              fullWidth\r\n              id=\"startDate\"\r\n              label=\"Дата начала проекта\"\r\n              name=\"startDate\"\r\n              type=\"date\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              inputRef={register}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              fullWidth\r\n              id=\"endDate\"\r\n              label=\"Дата завершения проекта\"\r\n              name=\"endDate\"\r\n              type=\"date\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              inputRef={register}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              fullWidth\r\n              id=\"manager\"\r\n              label=\"Руководитель проекта\"\r\n              name=\"manager\"\r\n              autoComplete=\"manager\"\r\n              defaultValue=\"Денис Конев\"\r\n              inputRef={register}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              fullWidth\r\n              id=\"administrator\"\r\n              label=\"Администратор проекта\"\r\n              name=\"administrator\"\r\n              autoComplete=\"administrator\"\r\n              defaultValue=\"Просолим Лимитед\"\r\n              inputRef={register}\r\n            />\r\n          </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            autoFocus\r\n            onClick={() => {\r\n              formRef.current?.dispatchEvent(createEvent(\"submit\"));\r\n            }}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            fullWidth\r\n            className={classes.addButton}\r\n          >\r\n            Добавить проект\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddProjectModal;\r\n","export function createEvent(eventName: string) {\r\n  let event;\r\n  if (typeof Event === \"function\") {\r\n    event = new Event(eventName, { cancelable: true, bubbles: true });\r\n  } else {\r\n    event = document.createEvent(\"Event\");\r\n    event.initEvent(eventName, true, true);\r\n  }\r\n  return event;\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { AppThunk } from \"../../../app/store\";\r\nimport { RootState } from \"../../../app/store\";\r\nimport { Project } from \"../api/types\";\r\n\r\ninterface ProjectState {\r\n  projects: Project[];\r\n  isLoading: boolean;\r\n  error: string;\r\n}\r\n\r\nconst initialState: ProjectState = {\r\n  projects: [\r\n    {\r\n      name: \"Проект1\",\r\n      startDate: \"2020-01-01\",\r\n      endDate: \"2020-01-12\",\r\n      manager: \"Иван\",\r\n      administrator: \"Павел\",\r\n    },\r\n    {\r\n      name: \"Проект 2\",\r\n      startDate: \"2020-01-01\",\r\n      endDate: \"2020-01-12\",\r\n      manager: \"Иван\",\r\n      administrator: \"Павел\",\r\n    },\r\n  ],\r\n  isLoading: false,\r\n  error: \"\",\r\n};\r\n\r\nexport const projectSlice = createSlice({\r\n  name: \"project\",\r\n  initialState,\r\n  reducers: {\r\n    setAddProject(state) {\r\n      state.isLoading = true;\r\n    },\r\n    setSuccessAddProject(state, action) {\r\n      const newProjects = state.projects.slice();\r\n      state.projects = [...newProjects, action.payload];\r\n      state.isLoading = false;\r\n    },\r\n  },\r\n});\r\n\r\nconst { setAddProject } = projectSlice.actions;\r\nconst { setSuccessAddProject } = projectSlice.actions;\r\nexport const selectProjects = (state: RootState) => state.project.projects;\r\nexport const selectIsLoading = (state: RootState) => state.project.isLoading;\r\n\r\nexport const addProject = (project: Project): AppThunk => async (dispatch) => {\r\n  //TODO\r\n  dispatch(setAddProject());\r\n  dispatch(setSuccessAddProject(project));\r\n};\r\n\r\nexport default projectSlice.reducer;\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Button from \"../../../common/components/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ViewProject from \"./ViewProject\";\r\nimport AddProjectModal from \"./AddProjectModal\";\r\nimport { addProject, selectProjects } from \"../state/projectSlice\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: \"25px\",\r\n  },\r\n  projects: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\",\r\n    height: \"70vh\",\r\n    overflow: \"auto\",\r\n  },\r\n}));\r\n\r\nconst ProjectList = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const projects = useSelector(selectProjects);\r\n\r\n  const [showModal, setShowModal] = React.useState(false);\r\n  const handleClickOpen = () => {\r\n    setShowModal(true);\r\n  };\r\n  const handleClose = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const submitNewProject = (project) => {\r\n    dispatch(addProject(project));\r\n    setShowModal(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.toolbar}>\r\n        <Typography variant=\"h5\" component=\"h5\">\r\n          Список проектов\r\n        </Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => {\r\n            handleClickOpen();\r\n          }}\r\n        >\r\n          Добавить проект\r\n        </Button>\r\n      </div>\r\n      <div className={classes.projects}>\r\n        {projects.map((project) => {\r\n          return <ViewProject key={project.name} {...project} />;\r\n        })}\r\n      </div>\r\n      <AddProjectModal onClose={handleClose} isOpen={showModal} onSubmit={submitNewProject} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","export const routes = {\r\n  projects: {\r\n    projects: \"/\",\r\n    roadmaps: \"/roadmaps\",\r\n  },\r\n  calendar: \"/calendar\",\r\n  tasks: \"/tasks\",\r\n  settings: \"/settings\",\r\n};\r\n","import React from \"react\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory, Switch, Route } from \"react-router-dom\";\r\nimport ProjectList from \"../components/ProjectList\";\r\nimport { routes } from \"../../../common/routes\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    paddingBottom: \"25px\",\r\n  },\r\n  root: {\r\n    padding: \"25px\",\r\n  },\r\n}));\r\n\r\nconst ProjectsPage = () => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        <Typography variant=\"h3\" component=\"h3\" className={classes.header}>\r\n          Проекты\r\n        </Typography>\r\n        <Tabs\r\n          value={value}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          onChange={(event, newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n          aria-label=\"disabled tabs example\"\r\n        >\r\n          <Tab\r\n            label=\"Список проектов\"\r\n            onClick={() => {\r\n              history.push(`${routes.projects.projects}`);\r\n            }}\r\n          />\r\n          <Tab\r\n            label=\"Дорожные карты\"\r\n            onClick={() => {\r\n              history.push(`${routes.projects.roadmaps}`);\r\n            }}\r\n          />\r\n        </Tabs>\r\n        <Switch>\r\n          <Route exact path={routes.projects.projects} component={ProjectList} />\r\n        </Switch>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProjectsPage;\r\n","import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport SettingsOutlinedIcon from \"@material-ui/icons/SettingsOutlined\";\r\nimport PermIdentityOutlinedIcon from \"@material-ui/icons/PermIdentityOutlined\";\r\nimport EventAvailableOutlinedIcon from \"@material-ui/icons/EventAvailableOutlined\";\r\nimport SubscriptionsOutlinedIcon from \"@material-ui/icons/SubscriptionsOutlined\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { routes } from \"../routes\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: \"25px\",\r\n    height: \"100%\",\r\n    backgroundColor: theme.palette.primary.main,\r\n    \"&:before\": {\r\n      backgroundColor: \"black\",\r\n      width: \"25px\",\r\n      height: \"100%\",\r\n      position: \"absolute\",\r\n      content: `\"\"`,\r\n      minHeight: \"100%\",\r\n      marginLeft: \"-25px\",\r\n    },\r\n  },\r\n  listItem: {\r\n    \"&:hover\": {\r\n      \"&:before\": {\r\n        backgroundColor: \"red\",\r\n        width: \"10px\",\r\n        height: \"100%\",\r\n        position: \"absolute\",\r\n        content: `\"\"`,\r\n        minHeight: \"100%\",\r\n        marginLeft: \"-15px\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst SideMenu = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n        <ListItem\r\n          button\r\n          className={classes.listItem}\r\n          onClick={() => {\r\n            history.push(`${routes.tasks}`);\r\n          }}\r\n        >\r\n          <ListItemIcon>\r\n            <SubscriptionsOutlinedIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Задачи и работы\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          className={classes.listItem}\r\n          onClick={() => {\r\n            history.push(`${routes.projects.projects}`);\r\n          }}\r\n        >\r\n          <ListItemIcon>\r\n            <PermIdentityOutlinedIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Проекты\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          className={classes.listItem}\r\n          onClick={() => {\r\n            history.push(`${routes.calendar}`);\r\n          }}\r\n        >\r\n          <ListItemIcon>\r\n            <EventAvailableOutlinedIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Календарь\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          className={classes.listItem}\r\n          onClick={() => {\r\n            history.push(`${routes.settings}`);\r\n          }}\r\n        >\r\n          <ListItemIcon>\r\n            <SettingsOutlinedIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Возможности\" />\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideMenu;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { AppThunk } from \"../../../app/store\";\r\nimport { RootState } from \"../../../app/store\";\r\n\r\ninterface AuthState {\r\n  isLogin: boolean;\r\n  loading: boolean;\r\n  error: string;\r\n}\r\n\r\nconst initialState: AuthState = {\r\n  isLogin: false,\r\n  loading: false,\r\n  error: \"\",\r\n};\r\n\r\nexport const authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    setLoginState(state, action) {\r\n      state.isLogin = action.payload;\r\n      state.loading = false;\r\n    },\r\n    loginSuccess(state) {\r\n      state.isLogin = true;\r\n    },\r\n    loginFailure(state, action) {\r\n      state.error = action.payload.error;\r\n      state.isLogin = false;\r\n    },\r\n    logout(state) {\r\n      state.isLogin = false;\r\n    },\r\n    setLoading(state, action) {\r\n      state.loading = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { loginSuccess } = authSlice.actions;\r\nexport const { loginFailure } = authSlice.actions;\r\nexport const { logout } = authSlice.actions;\r\nexport const { setLoginState } = authSlice.actions;\r\n\r\nexport const selectLogin = (state: RootState) => state.auth.isLogin;\r\nexport const selectLoading = (state: RootState) => state.auth.loading;\r\n\r\nexport const fetchAuth = (username: string, password: string): AppThunk => async (dispatch) => {\r\n  return new Promise(function (resolve, reject) {\r\n    if (username === \"admin\" && password === \"admin\") {\r\n      dispatch(loginSuccess());\r\n    } else {\r\n      return reject(\"Проверьте введённые данные\");\r\n    }\r\n  });\r\n};\r\n\r\nexport const fetchLogout = (): AppThunk => async (dispatch) => {\r\n  dispatch(logout());\r\n};\r\n\r\nexport default authSlice.reducer;\r\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport authReducer from \"../features/auth/state/authSlice\";\r\nimport projectReducer from \"./../features/project/state/projectSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n  },\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk = ThunkAction<any, RootState, unknown, Action<string>>;\r\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useAppDispatch } from \"../../app/store\";\r\nimport { fetchLogout } from \"../../features/auth/state/authSlice\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n    justifyContent: \"flex-end\",\r\n    display: \"flex\",\r\n    backgroundColor: \"lightGray\",\r\n  },\r\n}));\r\n\r\nexport default function TopMenu() {\r\n  const dispatch = useAppDispatch();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-label=\"menu\"\r\n          onClick={() => {\r\n            dispatch(fetchLogout());\r\n          }}\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Route, BrowserRouter, Switch } from \"react-router-dom\";\nimport ProjectsPage from \"./features/project/pages/ProjectPage\";\nimport SideMenu from \"./common/components/SideMenu\";\nimport TopMenu from \"./common/components/TopMenu\";\nimport { routes } from \"./common/routes\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Grid container direction=\"row\" style={{ height: \"100%\" }}>\n        <Grid item xs={3} xl={3} lg={3}>\n          <SideMenu />\n        </Grid>\n        <Grid item xs={9} xl={9}>\n          <TopMenu />\n          <Switch>\n            <Route path={routes.projects.projects} component={ProjectsPage} />\n          </Switch>\n        </Grid>\n      </Grid>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Button from \"../../../common/components/Button\";\r\nimport { fetchAuth } from \"../state/authSlice\";\r\nimport { useAppDispatch } from \"../../../app/store\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const dispatch = useAppDispatch();\r\n  const { register, handleSubmit, errors, setError } = useForm({\r\n    mode: \"onBlur\",\r\n    defaultValues: {},\r\n  });\r\n  const classes = useStyles();\r\n  const onSubmit = (data: any) => {\r\n    dispatch(fetchAuth(data.login, data.password)).catch(() => {\r\n      return setError(\"passwordCheck\", \"error\", \"Проверьте введённые данные\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"login\"\r\n            label=\"Логин\"\r\n            name=\"login\"\r\n            autoComplete=\"login\"\r\n            autoFocus\r\n            inputRef={register}\r\n          />\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Пароль\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            inputRef={register}\r\n          />\r\n          {errors.passwordCheck ? (\r\n            <p style={{ color: \"red\" }}>{errors.passwordCheck.message}</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Запомнить пароль\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            className={classes.submit}\r\n          >\r\n            Войти\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Забыли пароль?\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectLoading, selectLogin } from \"./state/authSlice\";\r\nimport SignInPage from \"./pages/SignInPage\";\r\n\r\nexport const AuthContextProvider: React.FC = (props) => {\r\n  const isLogin = useSelector(selectLogin);\r\n  const loading = useSelector(selectLoading);\r\n\r\n  useEffect(() => {\r\n    //TODO\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <>Loading...</>;\r\n  } else {\r\n    return (\r\n      <>\r\n        {isLogin ? (\r\n          props.children\r\n        ) : (\r\n          <>\r\n            <SignInPage />\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { AuthContextProvider } from \"./features/auth/AuthContextProvider\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./app/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <AuthContextProvider>\n        <App />\n      </AuthContextProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}